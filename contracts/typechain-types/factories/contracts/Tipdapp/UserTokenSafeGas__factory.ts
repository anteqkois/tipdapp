/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UserTokenSafeGas,
  UserTokenSafeGasInterface,
} from "../../../contracts/Tipdapp/UserTokenSafeGas";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600380546001600160a01b03191633179055610b58806100326000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80634cd88b761161008c57806395d89b411161006657806395d89b41146101e3578063a6f9dae1146101eb578063a9059cbb146101fe578063dd62ed3e1461021157600080fd5b80634cd88b761461018c57806370a082311461019f5780638da5cb5b146101c857600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce5671461015557806340c10f191461016457806342966c681461017957600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761024a565b6040516101049190610755565b60405180910390f35b61012061011b3660046107ba565b6102dc565b6040519015158152602001610104565b6002545b604051908152602001610104565b6101206101503660046107e4565b610349565b60405160128152602001610104565b6101776101723660046107ba565b61040a565b005b610177610187366004610820565b610490565b61017761019a3660046108dc565b6104f8565b6101346101ad366004610940565b6001600160a01b031660009081526005602052604090205490565b6003546040516001600160a01b039091168152602001610104565b6100f7610540565b6101206101f9366004610940565b61054f565b61012061020c3660046107ba565b6105f6565b61013461021f366004610962565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b60606000805461025990610995565b80601f016020809104026020016040519081016040528092919081815260200182805461028590610995565b80156102d25780601f106102a7576101008083540402835291602001916102d2565b820191906000526020600020905b8154815290600101906020018083116102b557829003601f168201915b5050505050905090565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103379086815260200190565b60405180910390a35060015b92915050565b6001600160a01b0383166000908152600460209081526040808320338452909152812054828110156103bb5760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064015b60405180910390fd5b6001600160a01b0385166000908152600460209081526040808320338452909152812080548592906103ee9084906109cf565b909155506103ff905085858561060c565b506001949350505050565b6003546001600160a01b031633146104345760405162461bcd60e51b81526004016103b2906109f0565b6001600160a01b03821660008181526005602090815260408083208054860190556002805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b33600090815260056020526040812080548392906104af9084906109cf565b909155505060028054829003905560405181815260009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350565b6003546001600160a01b031633146105225760405162461bcd60e51b81526004016103b2906109f0565b600061052e8282610a62565b50600161053b8382610a62565b505050565b60606001805461025990610995565b6003546000906001600160a01b0316331461057c5760405162461bcd60e51b81526004016103b2906109f0565b6001600160a01b0382166105d25760405162461bcd60e51b815260206004820152601960248201527f4e6577206f776e6572206973207a65726f20616464726573730000000000000060448201526064016103b2565b50600380546001600160a01b0319166001600160a01b03831617905560015b919050565b600061060333848461060c565b50600192915050565b6001600160a01b0382166106625760405162461bcd60e51b815260206004820152601860248201527f5472616e7366657220746f207a65726f2061646472657373000000000000000060448201526064016103b2565b6001600160a01b038316600090815260056020526040902054818110156106c45760405162461bcd60e51b8152602060048201526016602482015275416d6f756e7420657863656564732062616c616e636560501b60448201526064016103b2565b6001600160a01b038416600090815260056020526040812080548492906106ec9084906109cf565b90915550506001600160a01b03808416600081815260056020526040908190208054860190555190918616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107479086815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561078257858101830151858201604001528201610766565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146105f157600080fd5b600080604083850312156107cd57600080fd5b6107d6836107a3565b946020939093013593505050565b6000806000606084860312156107f957600080fd5b610802846107a3565b9250610810602085016107a3565b9150604084013590509250925092565b60006020828403121561083257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261086057600080fd5b813567ffffffffffffffff8082111561087b5761087b610839565b604051601f8301601f19908116603f011681019082821181831017156108a3576108a3610839565b816040528381528660208588010111156108bc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156108ef57600080fd5b823567ffffffffffffffff8082111561090757600080fd5b6109138683870161084f565b9350602085013591508082111561092957600080fd5b506109368582860161084f565b9150509250929050565b60006020828403121561095257600080fd5b61095b826107a3565b9392505050565b6000806040838503121561097557600080fd5b61097e836107a3565b915061098c602084016107a3565b90509250929050565b600181811c908216806109a957607f821691505b6020821081036109c957634e487b7160e01b600052602260045260246000fd5b50919050565b8181038181111561034357634e487b7160e01b600052601160045260246000fd5b6020808252600a908201526927b7363c9037bbb732b960b11b604082015260600190565b601f82111561053b57600081815260208120601f850160051c81016020861015610a3b5750805b601f850160051c820191505b81811015610a5a57828155600101610a47565b505050505050565b815167ffffffffffffffff811115610a7c57610a7c610839565b610a9081610a8a8454610995565b84610a14565b602080601f831160018114610ac55760008415610aad5750858301515b600019600386901b1c1916600185901b178555610a5a565b600085815260208120601f198616915b82811015610af457888601518255948401946001909101908401610ad5565b5085821015610b125787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220119ab926ad68817d3823fc911e2331ca6a97ee360aa87b78f7b53ffef2fbd4cc64736f6c63430008110033";

type UserTokenSafeGasConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserTokenSafeGasConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserTokenSafeGas__factory extends ContractFactory {
  constructor(...args: UserTokenSafeGasConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UserTokenSafeGas> {
    return super.deploy(overrides || {}) as Promise<UserTokenSafeGas>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UserTokenSafeGas {
    return super.attach(address) as UserTokenSafeGas;
  }
  override connect(signer: Signer): UserTokenSafeGas__factory {
    return super.connect(signer) as UserTokenSafeGas__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserTokenSafeGasInterface {
    return new utils.Interface(_abi) as UserTokenSafeGasInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UserTokenSafeGas {
    return new Contract(address, _abi, signerOrProvider) as UserTokenSafeGas;
  }
}
