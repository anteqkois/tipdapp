// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  // binaryTargets = ["debian-openssl-1.1.x"]
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
  // binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  // url      = "postgres://postgres:password@db:5432/qoistip"
  url      = env("DATABASE_URL")
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum Role {
  streamer
  charity
  shop
}

//change AvatarPath to url
model User {
  address       String    @id @unique @db.VarChar(42)
  nick          String    @unique
  email         String    @unique
  emailVerified DateTime?
  verified      Boolean   @default(false)
  roles         Role[]    @default([streamer])
  avatar        File?     @relation(fields: [avatarFileId], references: [id])
  avatarFileId  String?
  createdAt     DateTime  @default(now())
  updateAt      DateTime  @updatedAt

  details Details?
}

model Details {
  id          String     @id @default(cuid())
  user        User?      @relation(fields: [userAddress], references: [address])
  userAddress String?    @unique @db.VarChar(42)
  firstName   String
  lastName    String
  tipsCount   Int        @default(0)
  tipsValue   Decimal    @default(0) @db.Decimal(78, 0)
  userToken   UserToken?
  withdraw    Withdraw[]
}

model UserToken {
  address     String   @id @unique @db.VarChar(42)
  symbol      String   @unique
  name        String   @unique
  chainId     Int
  txHash      String   @db.VarChar(66)
  user        Details? @relation(fields: [userAddress], references: [userAddress])
  userAddress String?  @unique @db.VarChar(42)
}

model Token {
  address       String     @id @unique @db.VarChar(42)
  symbol        String     @unique
  name          String     @unique
  chainId       Int
  imgPath       String?
  latestPrice   Decimal?   @db.Decimal(78, 0)
  priceUpdateAt DateTime?
  // tip           Tip[]
  // withdraw      Withdraw[]
  // user          User[]
  // userAddress   String?    @db.VarChar(42)
  withdraw      Withdraw[]
}

model Withdraw {
  id           String   @id @default(cuid())
  user         Details  @relation(fields: [userAddress], references: [userAddress])
  userAddress  String   @db.VarChar(42)
  amount       Decimal  @db.Decimal(78, 0)
  token        Token    @relation(fields: [tokenAddress], references: [address])
  tokenAddress String   @db.VarChar(42)
  date         DateTime @default(now())
  txHash       String   @unique @db.VarChar(66)
}

model File {
  id        String @id @default(cuid())
  filename  String
  extension String
  User      User[]
}
