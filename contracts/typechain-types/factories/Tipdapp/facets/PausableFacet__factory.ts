/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PausableFacet,
  PausableFacetInterface,
} from "../../../Tipdapp/facets/PausableFacet";

const _abi = [
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061015f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635c975abb146100465780638456cb5914610060578063f7b188a51461006a575b600080fd5b60015460ff16604051901515815260200160405180910390f35b610068610072565b005b610068610088565b61007a61009c565b6001805460ff191681179055565b61009061009c565b6001805460ff19169055565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146101275760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b606482015260840160405180910390fd5b56fea2646970667358221220a9a94621f654de701eec8fe05fabfb83be95991a3ede79e22d00c5e21dc87f6464736f6c63430008110033";

type PausableFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PausableFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PausableFacet__factory extends ContractFactory {
  constructor(...args: PausableFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PausableFacet> {
    return super.deploy(overrides || {}) as Promise<PausableFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PausableFacet {
    return super.attach(address) as PausableFacet;
  }
  override connect(signer: Signer): PausableFacet__factory {
    return super.connect(signer) as PausableFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PausableFacetInterface {
    return new utils.Interface(_abi) as PausableFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PausableFacet {
    return new Contract(address, _abi, signerOrProvider) as PausableFacet;
  }
}
