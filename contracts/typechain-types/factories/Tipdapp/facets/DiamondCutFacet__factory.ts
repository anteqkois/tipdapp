/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from "../../../Tipdapp/facets/DiamondCutFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_initializationContractAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "InitializationFunctionReverted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061109d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610ba2565b610045565b005b61004d610232565b60025460009061ffff811690819083906007161561007d5750600381901c60009081526001840160205260409020545b60005b8881101561016a5761015d83838c8c8581811061009f5761009f610c54565b90506020028101906100b19190610c6a565b6100bf906020810190610c8a565b8d8d868181106100d1576100d1610c54565b90506020028101906100e39190610c6a565b6100f4906040810190602001610cbb565b8e8e8781811061010657610106610c54565b90506020028101906101189190610c6a565b610126906040810190610cd6565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506102a192505050565b9093509150600101610080565b508282146101865760028401805461ffff191661ffff84161790555b60078216156101a857600382901c600090815260018501602052604090208190555b7f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67389898989896040516101df959493929190610daf565b60405180910390a16102278787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a5092505050565b505050505050505050565b6000600401546001600160a01b0316331461029f5760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b60648201526084015b60405180910390fd5b565b60008080600084511161030a5760405162461bcd60e51b815260206004820152602b60248201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660448201526a1858d95d081d1bc818dd5d60aa1b6064820152608401610296565b600085600281111561031e5761031e610d20565b036104845761034586604051806060016040528060248152602001610ff460249139610b1c565b60005b845181101561047e57600085828151811061036557610365610c54565b6020908102919091018101516001600160e01b03198116600090815291859052604090912054909150606081901c156103fe5760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b6064820152608401610296565b6001600160e01b031980831660008181526020879052604090206001600160601b031960608d901b168e17905560e060058e901b811692831c199c909c1690821c179a8190036104625760038c901c600090815260018601602052604081209b909b555b8b61046c81610ef2565b9c505060019093019250610348915050565b50610a44565b600185600281111561049857610498610d20565b036106bd576104bf8660405180606001604052806028815260200161104060289139610b1c565b60005b845181101561047e5760008582815181106104df576104df610c54565b6020908102919091018101516001600160e01b03198116600090815291859052604090912054909150606081901c3081036105745760405162461bcd60e51b815260206004820152602f60248201527f4c69624469616d6f6e644375743a2043616e2774207265706c61636520696d6d60448201526e3aba30b1363290333ab731ba34b7b760891b6064820152608401610296565b896001600160a01b0316816001600160a01b0316036105fb5760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e00000000000000006064820152608401610296565b6001600160a01b0381166106775760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e207468617420646f65736e277420657869737400000000000000006064820152608401610296565b506001600160e01b031990911660009081526020849052604090206bffffffffffffffffffffffff919091166001600160601b031960608a901b161790556001016104c2565b60028560028111156106d1576106d1610d20565b036109ec576001600160a01b0386161561074c5760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b6064820152608401610296565b600388901c6007891660005b86518110156109cc5760008a9003610794578261077481610f0b565b60008181526001870160205260409020549b509350600792506107a29050565b8161079e81610f0b565b9250505b6000806000808a85815181106107ba576107ba610c54565b6020908102919091018101516001600160e01b031981166000908152918a9052604090912054909150606081901c61085a5760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e27742065786973740000000000000000006064820152608401610296565b30606082901c036108c45760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b6064820152608401610296565b600587901b8f901b94506001600160e01b03198086169083161461091a576001600160e01b03198516600090815260208a90526040902080546001600160601b0319166bffffffffffffffffffffffff83161790555b6001600160e01b031991909116600090815260208990526040812055600381901c611fff16925060051b60e016905085821461097f576000828152600188016020526040902080546001600160e01b031980841c19909116908516831c1790556109a3565b80836001600160e01b031916901c816001600160e01b031960001b901c198e16179c505b846000036109c157600086815260018801602052604081208190559c505b505050600101610758565b50806109d9836008610f22565b6109e39190610f3f565b99505050610a44565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b6064820152608401610296565b50959694955050505050565b6001600160a01b038216610a62575050565b610a848260405180606001604052806028815260200161101860289139610b1c565b600080836001600160a01b031683604051610a9f9190610f76565b600060405180830381855af49150503d8060008114610ada576040519150601f19603f3d011682016040523d82523d6000602084013e610adf565b606091505b509150915081610b1657805115610af95780518082602001fd5b838360405163192105d760e01b8152600401610296929190610fb4565b50505050565b813b8181610b165760405162461bcd60e51b81526004016102969190610fe0565b80356001600160a01b0381168114610b5457600080fd5b919050565b60008083601f840112610b6b57600080fd5b50813567ffffffffffffffff811115610b8357600080fd5b602083019150836020828501011115610b9b57600080fd5b9250929050565b600080600080600060608688031215610bba57600080fd5b853567ffffffffffffffff80821115610bd257600080fd5b818801915088601f830112610be657600080fd5b813581811115610bf557600080fd5b8960208260051b8501011115610c0a57600080fd5b60208301975080965050610c2060208901610b3d565b94506040880135915080821115610c3657600080fd5b50610c4388828901610b59565b969995985093965092949392505050565b634e487b7160e01b600052603260045260246000fd5b60008235605e19833603018112610c8057600080fd5b9190910192915050565b600060208284031215610c9c57600080fd5b610ca582610b3d565b9392505050565b803560038110610b5457600080fd5b600060208284031215610ccd57600080fd5b610ca582610cac565b6000808335601e19843603018112610ced57600080fd5b83018035915067ffffffffffffffff821115610d0857600080fd5b6020019150600581901b3603821315610b9b57600080fd5b634e487b7160e01b600052602160045260246000fd5b818352600060208085019450826000805b86811015610d7a5782356001600160e01b03198116808214610d67578384fd5b8952509683019691830191600101610d47565b50959695505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6060808252818101869052600090600560808085019089831b8601018a855b8b811015610ea957878303607f190184528135368e9003605e19018112610df457600080fd5b8d016001600160a01b03610e0782610b3d565b1684526020610e17818301610cac565b60038110610e3557634e487b7160e01b600052602160045260246000fd5b8582015260408281013536849003601e19018112610e5257600080fd5b90920181810192903567ffffffffffffffff811115610e7057600080fd5b80891b3603841315610e8157600080fd5b8982880152610e938a88018286610d36565b9783019796505050929092019150600101610dce565b50506001600160a01b03891660208701528581036040870152610ecd81888a610d86565b9b9a5050505050505050505050565b634e487b7160e01b600052601160045260246000fd5b600060018201610f0457610f04610edc565b5060010190565b600081610f1a57610f1a610edc565b506000190190565b8082028115828204841417610f3957610f39610edc565b92915050565b80820180821115610f3957610f39610edc565b60005b83811015610f6d578181015183820152602001610f55565b50506000910152565b60008251610c80818460208701610f52565b60008151808452610fa0816020860160208601610f52565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090610fd890830184610f88565b949350505050565b602081526000610ca56020830184610f8856fe4c69624469616d6f6e644375743a2041646420666163657420686173206e6f20636f64654c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a205265706c61636520666163657420686173206e6f20636f6465a264697066735822122042ceb79bfdc278bd2ef7a5e90a70de81a42cf4ab1c819b850b5fd4b740c965d664736f6c63430008110033";

type DiamondCutFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondCutFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(...args: DiamondCutFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondCutFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondCutFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondCutFacet {
    return super.attach(address) as DiamondCutFacet;
  }
  override connect(signer: Signer): DiamondCutFacet__factory {
    return super.connect(signer) as DiamondCutFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new utils.Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondCutFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondCutFacet;
  }
}
