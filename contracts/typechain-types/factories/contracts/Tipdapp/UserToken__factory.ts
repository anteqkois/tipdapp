/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UserToken,
  UserTokenInterface,
} from "../../../contracts/Tipdapp/UserToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506123f8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80634cd88b761161008c57806395d89b411161006657806395d89b411461024b578063a6f9dae114610269578063a9059cbb14610299578063dd62ed3e146102c9576100ea565b80634cd88b76146101e157806370a08231146101fd5780638da5cb5b1461022d576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806340c10f19146101a957806342966c68146101c5576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102f9565b60405161010491906118bc565b60405180910390f35b61012760048036038101906101229190611986565b6103c7565b60405161013491906119e1565b60405180910390f35b610145610531565b6040516101529190611a0b565b60405180910390f35b61017560048036038101906101709190611a26565b610577565b60405161018291906119e1565b60405180910390f35b610193610839565b6040516101a09190611a95565b60405180910390f35b6101c360048036038101906101be9190611986565b61087e565b005b6101df60048036038101906101da9190611ab0565b610aed565b005b6101fb60048036038101906101f69190611c12565b610d24565b005b61021760048036038101906102129190611c8a565b610eae565b6040516102249190611a0b565b60405180910390f35b610235610f33565b6040516102429190611cc6565b60405180910390f35b610253610f99565b60405161026091906118bc565b60405180910390f35b610283600480360381019061027e9190611c8a565b611067565b60405161029091906119e1565b60405180910390f35b6102b360048036038101906102ae9190611986565b6112f2565b6040516102c091906119e1565b60405180910390f35b6102e360048036038101906102de9190611ce1565b61136d565b6040516102f09190611a0b565b60405180910390f35b606061030f6760fa18376494928d60c01b611430565b61032367b89ece49f8eab59d60c01b611430565b610337670ff79623ed35734f60c01b611430565b6000805461034490611d50565b80601f016020809104026020016040519081016040528092919081815260200182805461037090611d50565b80156103bd5780601f10610392576101008083540402835291602001916103bd565b820191906000526020600020905b8154815290600101906020018083116103a057829003601f168201915b5050505050905090565b60006103dd676e47b0dd1e26c32660c01b611430565b6103f1672be025e5f2917abc60c01b611430565b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061048667e571d2f858def65c60c01b611430565b61049a67576c38fbc5f6bd6660c01b611430565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104f79190611a0b565b60405180910390a36105136796faa4ff9b9d133f60c01b611430565b6105276793c6283708ad39cc60c01b611430565b6001905092915050565b60006105476767b79e51c7fdad1b60c01b611430565b61055b6760216c966de4bdce60c01b611430565b61056f67fc67032730c4a38c60c01b611430565b600254905090565b600061058d679a3958843989491360c01b611430565b6105a16772e6ef3d5e81d80c60c01b611430565b6105b567fddce46d6a4bca5b60c01b611430565b6000600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061064a678aa5e2a0e41d8d1e60c01b611430565b61065e67410824d6882811d460c01b611430565b6106726732d7ff3135ab918360c01b611430565b828110156106b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ac90611dcd565b60405180910390fd5b6106c967fae0115478eb50b460c01b611430565b6106dd67d70403873f8f607d60c01b611430565b6106f1675952e1c1daf6c1e460c01b611430565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107bd5761072c67cf032c8c7055d3b160c01b611430565b82816107389190611e1c565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107d2565b6107d16746d6d43bb292492c60c01b611430565b5b6107e667a6c26ca0df12fef360c01b611430565b6107fa679759587a72a70c5a60c01b611430565b610805858585611433565b61081967122bdf12f4bd27a360c01b611430565b61082d6721a2da746980ed4d60c01b611430565b60019150509392505050565b600061084f67abb4fc4c64c4750560c01b611430565b610863677101512967037c6760c01b611430565b61087767b251b05bf480f6db60c01b611430565b6012905090565b61089267505febb6fdafbce760c01b611430565b6108a667de34028cdce6c81760c01b611430565b6108ba67baee1f1370d9bde660c01b611430565b6108ce672b2bbeff4f78c46a60c01b611430565b6108e2671e84f4fbe6de8f9260c01b611430565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610972576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096990611e9c565b60405180910390fd5b61098667ec06298e4785177460c01b611430565b61099a678a4b2ae66736590460c01b611430565b6109ae673ad4ba906569f31360c01b611430565b6109c2674556160a1a6b5e0460c01b611430565b6109d6677ee7b31f55ca3ec960c01b611430565b6109ea6750513bb1d4ee6b6d60c01b611430565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550610a4b67b9fbba80a63132fd60c01b611430565b80600260008282540192505081905550610a6f67050850200499b4ff60c01b611430565b610a8367b5e06c6ee68b2df660c01b611430565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ae19190611a0b565b60405180910390a35050565b610b0167e786d9f6b64f40fa60c01b611430565b610b156788daf7a9edd06a6360c01b611430565b610b2967f62ab74bd4041c0760c01b611430565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610b81670c4060822b35520760c01b611430565b610b95674f49054d753ade9f60c01b611430565b610ba96753aed1461f9b5cd760c01b611430565b81811015610bec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be390611f08565b60405180910390fd5b610c0067d60edfdc6c5b0b1760c01b611430565b610c1467b8cc7fb5335404f560c01b611430565b610c28675252fc0931e301dc60c01b611430565b818103600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c826759ee3a957d817cd560c01b611430565b81600260008282540392505081905550610ca6677720204d69ad86ee60c01b611430565b610cba67928b8877fc8783d860c01b611430565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d189190611a0b565b60405180910390a35050565b610d3867cd5bf9676a4592dd60c01b611430565b610d4c67e8974d8ea0040c0560c01b611430565b610d6067ed4bc32761bdeb4860c01b611430565b610d74673fdbf2028fd70da960c01b611430565b6000600360149054906101000a900460ff1660ff1614610dc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc090611f74565b60405180910390fd5b610ddd67735e694f1500fe9460c01b611430565b610df167e41e854580cef76b60c01b611430565b6001600360146101000a81548160ff021916908360ff160217905550610e2167106a66614300a8e360c01b611430565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e766722349dd9f28e26e660c01b611430565b8060009081610e859190612140565b50610e9a67d2da40ef8751b77a60c01b611430565b8160019081610ea99190612140565b505050565b6000610ec46795423126290acc7860c01b611430565b610ed8671bc320c23533e9ab60c01b611430565b610eec6745e6ba75a0270eda60c01b611430565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610f4967b41bb3fb0091063660c01b611430565b610f5d676c7e70c09f2a723260c01b611430565b610f7167ede024b6b32fb2fc60c01b611430565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060610faf677d3408292acddab860c01b611430565b610fc3677306d64f26c923a560c01b611430565b610fd767dcc89f547e19e6b160c01b611430565b60018054610fe490611d50565b80601f016020809104026020016040519081016040528092919081815260200182805461101090611d50565b801561105d5780601f106110325761010080835404028352916020019161105d565b820191906000526020600020905b81548152906001019060200180831161104057829003601f168201915b5050505050905090565b600061107d679c32c485b02148b460c01b611430565b61109167de34028cdce6c81760c01b611430565b6110a567baee1f1370d9bde660c01b611430565b6110b9672b2bbeff4f78c46a60c01b611430565b6110cd671e84f4fbe6de8f9260c01b611430565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461115d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115490611e9c565b60405180910390fd5b61117167ec06298e4785177460c01b611430565b611185678a4b2ae66736590460c01b611430565b61119967c479f54789de10eb60c01b611430565b6111ad677f8a3a70ae4b92b060c01b611430565b6111c1671661e218fe12a51d60c01b611430565b6111d5671bd35d1d1e2a77e360c01b611430565b6111e967530d89166d7072dc60c01b611430565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124f9061225e565b60405180910390fd5b61126c673df1240e42ce89a560c01b611430565b61128067d828c475407fdfbf60c01b611430565b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506112d5672b68985f880abeec60c01b611430565b6112e967c738aca88b49a81060c01b611430565b60019050919050565b6000611308675718f8e9a955ba8b60c01b611430565b61131c677a222c953759b02160c01b611430565b61133067146430de96a5d69360c01b611430565b61133b338484611433565b61134f67bf1e1e493b9aa13160c01b611430565b61136367eacbde09f640308260c01b611430565b6001905092915050565b600061138367151e7df7acc2ea0160c01b611430565b61139767611737c9ba0a213160c01b611430565b6113ab67e3a314202aacf7cb60c01b611430565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b50565b61144767454807159fba825d60c01b611430565b61145b674178e4d243d8276c60c01b611430565b61146f6772e5c63a7363b78160c01b611430565b61148367ea187464dce1306360c01b611430565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e9906122ca565b60405180910390fd5b6115066787b5a6170188863960c01b611430565b61151a67bf291e00bfcb7d8c60c01b611430565b61152e670b7b7702329f12c360c01b611430565b61154267e77c31c41534c4db60c01b611430565b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a790612336565b60405180910390fd5b6115c4671fcadab1729affb160c01b611430565b6115d867485f934aa97f525f60c01b611430565b6115ec671117fd23d6000e1260c01b611430565b6000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050611644672a9c72b474916f5f60c01b611430565b61165867a527c597aee8f2a660c01b611430565b61166c678a75cdcfb3167a1e60c01b611430565b818110156116af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a6906123a2565b60405180910390fd5b6116c367840271c3ee34a69460c01b611430565b6116d767921ca53bcbd87b6560c01b611430565b6116eb67c834ce54cbf5846860c01b611430565b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555061174c674de88c704525489e60c01b611430565b81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506117ad6760a2ad9eddded4c560c01b611430565b6117c167bc0502d12803af2e60c01b611430565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161181e9190611a0b565b60405180910390a350505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561186657808201518184015260208101905061184b565b60008484015250505050565b6000601f19601f8301169050919050565b600061188e8261182c565b6118988185611837565b93506118a8818560208601611848565b6118b181611872565b840191505092915050565b600060208201905081810360008301526118d68184611883565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061191d826118f2565b9050919050565b61192d81611912565b811461193857600080fd5b50565b60008135905061194a81611924565b92915050565b6000819050919050565b61196381611950565b811461196e57600080fd5b50565b6000813590506119808161195a565b92915050565b6000806040838503121561199d5761199c6118e8565b5b60006119ab8582860161193b565b92505060206119bc85828601611971565b9150509250929050565b60008115159050919050565b6119db816119c6565b82525050565b60006020820190506119f660008301846119d2565b92915050565b611a0581611950565b82525050565b6000602082019050611a2060008301846119fc565b92915050565b600080600060608486031215611a3f57611a3e6118e8565b5b6000611a4d8682870161193b565b9350506020611a5e8682870161193b565b9250506040611a6f86828701611971565b9150509250925092565b600060ff82169050919050565b611a8f81611a79565b82525050565b6000602082019050611aaa6000830184611a86565b92915050565b600060208284031215611ac657611ac56118e8565b5b6000611ad484828501611971565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b1f82611872565b810181811067ffffffffffffffff82111715611b3e57611b3d611ae7565b5b80604052505050565b6000611b516118de565b9050611b5d8282611b16565b919050565b600067ffffffffffffffff821115611b7d57611b7c611ae7565b5b611b8682611872565b9050602081019050919050565b82818337600083830152505050565b6000611bb5611bb084611b62565b611b47565b905082815260208101848484011115611bd157611bd0611ae2565b5b611bdc848285611b93565b509392505050565b600082601f830112611bf957611bf8611add565b5b8135611c09848260208601611ba2565b91505092915050565b60008060408385031215611c2957611c286118e8565b5b600083013567ffffffffffffffff811115611c4757611c466118ed565b5b611c5385828601611be4565b925050602083013567ffffffffffffffff811115611c7457611c736118ed565b5b611c8085828601611be4565b9150509250929050565b600060208284031215611ca057611c9f6118e8565b5b6000611cae8482850161193b565b91505092915050565b611cc081611912565b82525050565b6000602082019050611cdb6000830184611cb7565b92915050565b60008060408385031215611cf857611cf76118e8565b5b6000611d068582860161193b565b9250506020611d178582860161193b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611d6857607f821691505b602082108103611d7b57611d7a611d21565b5b50919050565b7f496e73756666696369656e7420616c6c6f77616e636500000000000000000000600082015250565b6000611db7601683611837565b9150611dc282611d81565b602082019050919050565b60006020820190508181036000830152611de681611daa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e2782611950565b9150611e3283611950565b9250828203905081811115611e4a57611e49611ded565b5b92915050565b7f4f6e6c79206f776e657200000000000000000000000000000000000000000000600082015250565b6000611e86600a83611837565b9150611e9182611e50565b602082019050919050565b60006020820190508181036000830152611eb581611e79565b9050919050565b7f4275726e20616d6f756e7420657863656564732062616c616e63650000000000600082015250565b6000611ef2601b83611837565b9150611efd82611ebc565b602082019050919050565b60006020820190508181036000830152611f2181611ee5565b9050919050565b7f436f6e747261637420697320616c726561647920696e697469616c697a656400600082015250565b6000611f5e601f83611837565b9150611f6982611f28565b602082019050919050565b60006020820190508181036000830152611f8d81611f51565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611ff67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611fb9565b6120008683611fb9565b95508019841693508086168417925050509392505050565b6000819050919050565b600061203d61203861203384611950565b612018565b611950565b9050919050565b6000819050919050565b61205783612022565b61206b61206382612044565b848454611fc6565b825550505050565b600090565b612080612073565b61208b81848461204e565b505050565b5b818110156120af576120a4600082612078565b600181019050612091565b5050565b601f8211156120f4576120c581611f94565b6120ce84611fa9565b810160208510156120dd578190505b6120f16120e985611fa9565b830182612090565b50505b505050565b600082821c905092915050565b6000612117600019846008026120f9565b1980831691505092915050565b60006121308383612106565b9150826002028217905092915050565b6121498261182c565b67ffffffffffffffff81111561216257612161611ae7565b5b61216c8254611d50565b6121778282856120b3565b600060209050601f8311600181146121aa5760008415612198578287015190505b6121a28582612124565b86555061220a565b601f1984166121b886611f94565b60005b828110156121e0578489015182556001820191506020850194506020810190506121bb565b868310156121fd57848901516121f9601f891682612106565b8355505b6001600288020188555050505b505050505050565b7f4e6577206f776e6572206973207a65726f206164647265737300000000000000600082015250565b6000612248601983611837565b915061225382612212565b602082019050919050565b600060208201905081810360008301526122778161223b565b9050919050565b7f5472616e7366657220746f207a65726f20616464726573730000000000000000600082015250565b60006122b4601883611837565b91506122bf8261227e565b602082019050919050565b600060208201905081810360008301526122e3816122a7565b9050919050565b7f5472616e7366657220746f207468697320616464726573730000000000000000600082015250565b6000612320601883611837565b915061232b826122ea565b602082019050919050565b6000602082019050818103600083015261234f81612313565b9050919050565b7f416d6f756e7420657863656564732062616c616e636500000000000000000000600082015250565b600061238c601683611837565b915061239782612356565b602082019050919050565b600060208201905081810360008301526123bb8161237f565b905091905056fea2646970667358221220e1d68ee0ddfe9e1ae8e7d68e802b90d3c34fa0ca127064aec8e804ed7773c1f964736f6c63430008110033";

type UserTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserToken__factory extends ContractFactory {
  constructor(...args: UserTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UserToken> {
    return super.deploy(overrides || {}) as Promise<UserToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UserToken {
    return super.attach(address) as UserToken;
  }
  override connect(signer: Signer): UserToken__factory {
    return super.connect(signer) as UserToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserTokenInterface {
    return new utils.Interface(_abi) as UserTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UserToken {
    return new Contract(address, _abi, signerOrProvider) as UserToken;
  }
}
