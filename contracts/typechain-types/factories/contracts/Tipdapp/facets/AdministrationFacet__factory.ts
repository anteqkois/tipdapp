/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AdministrationFacet,
  AdministrationFacetInterface,
} from "../../../../contracts/Tipdapp/facets/AdministrationFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_newSignerAdmin",
        type: "address",
      },
    ],
    name: "changeSignerAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "setUserTokenImplmentation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signerAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tipFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "userTokenImplmentation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "withdrawERC20Admin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawETHAdmin",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokenAddress",
        type: "address[]",
      },
    ],
    name: "withdrawManyERC20Admin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506115d0806100206000396000f3fe6080604052600436106100a75760003560e01c8063a1244ca111610064578063a1244ca114610175578063d63fc60a1461019e578063d8a3740e146101c7578063e98827b6146101f2578063f7b188a51461021b578063fab6a80314610232576100a7565b806335759788146100ac5780635c975abb146100b657806369fe0e2d146100e157806379cc3f1c1461010a5780638456cb59146101335780638b08da6d1461014a575b600080fd5b6100b461025d565b005b3480156100c257600080fd5b506100cb6104e1565b6040516100d8919061110f565b60405180910390f35b3480156100ed57600080fd5b506101086004803603810190610103919061116a565b610537565b005b34801561011657600080fd5b50610131600480360381019061012c91906111fc565b610649565b005b34801561013f57600080fd5b506101486107d2565b005b34801561015657600080fd5b5061015f61089a565b60405161016c919061128a565b60405180910390f35b34801561018157600080fd5b5061019c600480360381019061019791906112d1565b610903565b005b3480156101aa57600080fd5b506101c560048036038101906101c091906112d1565b6109f2565b005b3480156101d357600080fd5b506101dc610ae1565b6040516101e9919061130d565b60405180910390f35b3480156101fe57600080fd5b50610219600480360381019061021491906112d1565b610b29565b005b34801561022757600080fd5b50610230610e3e565b005b34801561023e57600080fd5b50610247610f05565b604051610254919061128a565b60405180910390f35b61027167e94aee7f6576410260c01b610f6e565b610285671cbcf22506e664c560c01b610f71565b61029967489ed96734de2eb360c01b610f71565b6102ad67aa3fd7c5dd17b22760c01b610f71565b6102b5610f74565b6102c9679fad15623699c2b160c01b610f71565b6102dd673403adc8c3014be260c01b610f6e565b6102f167bff2e426cf620c8060c01b610f6e565b61030567577d3c682bdf1ea060c01b610f6e565b61031967a54529ef2be8269960c01b610f6e565b60008060020160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061037367d1da1b32d740aed960c01b610f6e565b600060020160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090556103cd6730ff3566cbabf68a60c01b610f6e565b6103e1672293754af5b1322660c01b610f6e565b60003373ffffffffffffffffffffffffffffffffffffffff168260405161040790611359565b60006040518083038185875af1925050503d8060008114610444576040519150601f19603f3d011682016040523d82523d6000602084013e610449565b606091505b505090506104616735efbf0f6eab35f260c01b610f6e565b610475675caa3aaa3320b59760c01b610f6e565b61048967fe5047253ad35c6b60c01b610f6e565b806104c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c0906113cb565b60405180910390fd5b6104dd67d3bf70e9d0cfbfed60c01b610f6e565b5050565b60006104f7675cc4f7dfa706a90060c01b610f6e565b61050b67eec4f0a5d1634c7e60c01b610f6e565b61051f67c03a0320ee8d292e60c01b610f6e565b600060010160009054906101000a900460ff16905090565b61054b6715abc0bee502ecbc60c01b610f6e565b61055f671cbcf22506e664c560c01b610f71565b61057367489ed96734de2eb360c01b610f71565b61058767aa3fd7c5dd17b22760c01b610f71565b61058f610f74565b6105a3679fad15623699c2b160c01b610f71565b6105b767be80b38c4d812f1f60c01b610f6e565b6105cb67ca9d82ef8462b17260c01b610f6e565b6105df67ff692d1f4bbab4bb60c01b610f6e565b6105f367a55666679fe8e74860c01b610f6e565b61060767803b4d05a8d90c3960c01b610f6e565b6105dc811061061557600080fd5b61062967b75db48010356a8060c01b610f6e565b61063d6729bba06b0e137a9260c01b610f6e565b80600080018190555050565b61065d67dc4a7e1caa05451a60c01b610f6e565b610671671cbcf22506e664c560c01b610f71565b61068567489ed96734de2eb360c01b610f71565b61069967aa3fd7c5dd17b22760c01b610f71565b6106a1610f74565b6106b5679fad15623699c2b160c01b610f71565b6106c967bce088bc0197354b60c01b610f6e565b6106dd676daebf5d341c29b660c01b610f6e565b6106f167d9e963965a45df5860c01b610f6e565b61070567929137e69c09a5b560c01b610f6e565b6000828290509050610721674e3007b8481f0f2a60c01b610f6e565b610735678862ddba2565162c60c01b610f6e565b60005b8181146107cc5761075367d8128cbca49a9d9e60c01b610f6e565b61076767f4753d32b6a11f3f60c01b610f6e565b61079784848381811061077d5761077c6113eb565b5b905060200201602081019061079291906112d1565b610b29565b6107ab67b266e853ef2f53cd60c01b610f6e565b6107bf67a3674345fa54591e60c01b610f6e565b8080600101915050610738565b50505050565b6107e667e32cca370910e42260c01b610f6e565b6107fa671cbcf22506e664c560c01b610f71565b61080e67489ed96734de2eb360c01b610f71565b61082267aa3fd7c5dd17b22760c01b610f71565b61082a610f74565b61083e679fad15623699c2b160c01b610f71565b61085267fae421a36db90ecc60c01b610f6e565b610866671ca5013553091b7e60c01b610f6e565b61087a674b3e6f979082255f60c01b610f6e565b6001600060010160006101000a81548160ff021916908315150217905550565b60006108b067ded57f86b53f6c3760c01b610f6e565b6108c467f22793643760447260c01b610f6e565b6108d867540c5a2b8f315f7460c01b610f6e565b600060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610917671f18cd840850eb3d60c01b610f6e565b61092b671cbcf22506e664c560c01b610f71565b61093f67489ed96734de2eb360c01b610f71565b61095367aa3fd7c5dd17b22760c01b610f71565b61095b610f74565b61096f679fad15623699c2b160c01b610f71565b61098367c90f075f875c2a3e60c01b610f6e565b6109976757ac06374367fb2f60c01b610f6e565b6109ab67b89faf2913eebf2b60c01b610f6e565b80600060050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610a066705139a05640cb08360c01b610f6e565b610a1a671cbcf22506e664c560c01b610f71565b610a2e67489ed96734de2eb360c01b610f71565b610a4267aa3fd7c5dd17b22760c01b610f71565b610a4a610f74565b610a5e679fad15623699c2b160c01b610f71565b610a7267b108e8259566a76160c01b610f6e565b610a8667fcc0d1d175d9087e60c01b610f6e565b610a9a67e604abe60a037dde60c01b610f6e565b80600060010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610af76779d77f141cbc8caa60c01b610f6e565b610b0b6708dd16b6b02b003360c01b610f6e565b610b1f67377efad36060609260c01b610f6e565b6000800154905090565b610b3d670ece19e72984e0a560c01b610f6e565b610b51671cbcf22506e664c560c01b610f71565b610b6567489ed96734de2eb360c01b610f71565b610b7967aa3fd7c5dd17b22760c01b610f71565b610b81610f74565b610b95679fad15623699c2b160c01b610f71565b610ba967999c357887a24ab060c01b610f6e565b610bbd67da39899141267b4a60c01b610f6e565b610bd167993f20f9a1fcd55760c01b610f6e565b610be567cfd866663e87260760c01b610f6e565b60008060030160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610c7c67668c6f62a2da3c3a60c01b610f6e565b600060030160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055610d136784d054af1efbb06160c01b610f6e565b610d27673f094d5a0560b5b460c01b610f6e565b60008273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610d6492919061141a565b6020604051808303816000875af1158015610d83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da7919061146f565b9050610dbd674eeddf46a16282c660c01b610f6e565b610dd1674379cbd2c108a4e460c01b610f6e565b610de56737302c3c849ed2b060c01b610f6e565b80610e25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1c906114e8565b60405180910390fd5b610e3967b58d2a9574dfbe6c60c01b610f6e565b505050565b610e5267a10df2ca0aa175c060c01b610f6e565b610e66671cbcf22506e664c560c01b610f71565b610e7a67489ed96734de2eb360c01b610f71565b610e8e67aa3fd7c5dd17b22760c01b610f71565b610e96610f74565b610eaa679fad15623699c2b160c01b610f71565b610ebe67fcf56b6c0b26376760c01b610f6e565b610ed267890a0dec12892d0f60c01b610f6e565b610ee667aa5077ce83d47da660c01b610f6e565b60008060010160006101000a81548160ff021916908315150217905550565b6000610f1b67ce3d21d52c387b0060c01b610f6e565b610f2f67c8157bfad425f36e60c01b610f6e565b610f4367f5fd60f22b992f9b60c01b610f6e565b600060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b50565b50565b610f8867c70b01c8f5a42eb060c01b611073565b610f9c67a8f89aa2bfafc24c60c01b611073565b610fb0676b4f0b68756580c660c01b611073565b610fc467c0e3aa691c97f4b860c01b611073565b610fcc611076565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461105d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110549061157a565b60405180910390fd5b61107167c9ca38073fbe7f8760c01b611073565b565b50565b600061108c674cd8ea8450283c6660c01b611073565b6110a06741e2e691e2166cd760c01b611073565b6110b4678d4ce6a3d6f7770760c01b611073565b60007fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90506110ed678efb111757eeabfc60c01b611073565b8091505090565b60008115159050919050565b611109816110f4565b82525050565b60006020820190506111246000830184611100565b92915050565b600080fd5b600080fd5b6000819050919050565b61114781611134565b811461115257600080fd5b50565b6000813590506111648161113e565b92915050565b6000602082840312156111805761117f61112a565b5b600061118e84828501611155565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126111bc576111bb611197565b5b8235905067ffffffffffffffff8111156111d9576111d861119c565b5b6020830191508360208202830111156111f5576111f46111a1565b5b9250929050565b600080602083850312156112135761121261112a565b5b600083013567ffffffffffffffff8111156112315761123061112f565b5b61123d858286016111a6565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061127482611249565b9050919050565b61128481611269565b82525050565b600060208201905061129f600083018461127b565b92915050565b6112ae81611269565b81146112b957600080fd5b50565b6000813590506112cb816112a5565b92915050565b6000602082840312156112e7576112e661112a565b5b60006112f5848285016112bc565b91505092915050565b61130781611134565b82525050565b600060208201905061132260008301846112fe565b92915050565b600081905092915050565b50565b6000611343600083611328565b915061134e82611333565b600082019050919050565b600061136482611336565b9150819050919050565b600082825260208201905092915050565b7f4661696c656420746f2077697468647261772045746865720000000000000000600082015250565b60006113b560188361136e565b91506113c08261137f565b602082019050919050565b600060208201905081810360008301526113e4816113a8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060408201905061142f600083018561127b565b61143c60208301846112fe565b9392505050565b61144c816110f4565b811461145757600080fd5b50565b60008151905061146981611443565b92915050565b6000602082840312156114855761148461112a565b5b60006114938482850161145a565b91505092915050565b7f5769746864726177204552433230206e6f742073756363657373000000000000600082015250565b60006114d2601a8361136e565b91506114dd8261149c565b602082019050919050565b60006020820190508181036000830152611501816114c5565b9050919050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b600061156460228361136e565b915061156f82611508565b604082019050919050565b6000602082019050818103600083015261159381611557565b905091905056fea26469706673582212201430226213e1206b63fbc2d760ca805be72c383f561bdff1a9f507ec6cf6f1fb64736f6c63430008110033";

type AdministrationFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdministrationFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AdministrationFacet__factory extends ContractFactory {
  constructor(...args: AdministrationFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AdministrationFacet> {
    return super.deploy(overrides || {}) as Promise<AdministrationFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AdministrationFacet {
    return super.attach(address) as AdministrationFacet;
  }
  override connect(signer: Signer): AdministrationFacet__factory {
    return super.connect(signer) as AdministrationFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdministrationFacetInterface {
    return new utils.Interface(_abi) as AdministrationFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AdministrationFacet {
    return new Contract(address, _abi, signerOrProvider) as AdministrationFacet;
  }
}
