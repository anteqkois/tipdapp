"use strict";var x=Object.create;var l=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var R=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var V=(r,n)=>{for(var t in n)l(r,t,{get:n[t],enumerable:!0})},d=(r,n,t,s)=>{if(n&&typeof n=="object"||typeof n=="function")for(let e of v(n))!b.call(r,e)&&e!==t&&l(r,e,{get:()=>n[e],enumerable:!(s=S(n,e))||s.enumerable});return r};var _=(r,n,t)=>(t=r!=null?x(R(r)):{},d(n||!r||!r.__esModule?l(t,"default",{value:r,enumerable:!0}):t,r)),D=r=>d(l({},"__esModule",{value:!0}),r);var g=(r,n,t)=>new Promise((s,e)=>{var i=a=>{try{m(t.next(a))}catch(E){e(E)}},o=a=>{try{m(t.throw(a))}catch(E){e(E)}},m=a=>a.done?s(a.value):Promise.resolve(a.value).then(i,o);m((t=t.apply(r,n)).next())});var $={};V($,{ApiError:()=>u,ValidationError:()=>p,getOrCache:()=>w,isApiError:()=>f,isOperationalErrorArray:()=>y,isValidationError:()=>h,redis:()=>c});module.exports=D($);var u=class extends Error{constructor(t,s){super();this.type="ApiError";this.isOperational=!0;this.status=s!=null?s:400,this.message=t}},f=r=>r!==null&&typeof r=="object"&&"type"in r&&r.type==="ApiError",p=class extends Error{constructor(t,s,e,i,o){super();this.type="ValidationError";this.isOperational=!0;this.field=t,this.title=s,this.message=e,this.code=i,this.status=o!=null?o:422}static fromZodErrorArray(t,s){let e=[];return t.forEach(i=>{let o=new p(i.path[0],i.path[0],i.message,`${i.path[0]}.${i.code}`);e.push(o)}),e}static mapArrayByField(t){let s={};return t.forEach(e=>{s[e.field]=e.message}),s}},h=r=>r!==null&&typeof r=="object"&&"type"in r&&r.type==="ValidationError";var y=r=>!!(r[0]!==null&&typeof r[0]=="object"&&"isOperational"in r[0]&&r[0].isOperational);var O=require("redis");var A=_(require("dotenv")),{config:I}=A.default;I({path:process.env.dotenv_config_path?process.env.dotenv_config_path:".env"});var c=(0,O.createClient)({url:`redis://${process.env.REDIS_USER_NAME}:${process.env.REDIS_PASSWORD}@${process.env.REDIS_HOSTNAME}:${process.env.REDIS_PORT}`});c.on("error",r=>console.log("Redis Client Error",r));g(void 0,null,function*(){yield c.connect()});var w=(r,n)=>g(void 0,null,function*(){return new Promise((t,s)=>g(void 0,null,function*(){let e=yield c.get(r);if(e)return t(JSON.parse(e));let i=yield n();c.set(r,JSON.stringify(i)),t(i)}))});
