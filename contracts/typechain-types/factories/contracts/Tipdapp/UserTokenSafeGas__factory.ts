/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UserTokenSafeGas,
  UserTokenSafeGasInterface,
} from "../../../contracts/Tipdapp/UserTokenSafeGas";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002b677c3e7c5310ddc2a160c01b61008b60201b60201c565b6100456769b2565bd14db66360c01b61008b60201b60201c565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061008e565b50565b611c738061009d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80634cd88b761161008c57806395d89b411161006657806395d89b411461024b578063a6f9dae114610269578063a9059cbb14610299578063dd62ed3e146102c9576100ea565b80634cd88b76146101e157806370a08231146101fd5780638da5cb5b1461022d576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806340c10f19146101a957806342966c68146101c5576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102f9565b60405161010491906113bf565b60405180910390f35b61012760048036038101906101229190611489565b6103c7565b60405161013491906114e4565b60405180910390f35b610145610531565b604051610152919061150e565b60405180910390f35b61017560048036038101906101709190611529565b610577565b60405161018291906114e4565b60405180910390f35b61019361069a565b6040516101a09190611598565b60405180910390f35b6101c360048036038101906101be9190611489565b6106df565b005b6101df60048036038101906101da91906115b3565b61094e565b005b6101fb60048036038101906101f69190611715565b610a95565b005b6102176004803603810190610212919061178d565b610c25565b604051610224919061150e565b60405180910390f35b610235610caa565b60405161024291906117c9565b60405180910390f35b610253610d10565b60405161026091906113bf565b60405180910390f35b610283600480360381019061027e919061178d565b610dde565b60405161029091906114e4565b60405180910390f35b6102b360048036038101906102ae9190611489565b611069565b6040516102c091906114e4565b60405180910390f35b6102e360048036038101906102de91906117e4565b6110e4565b6040516102f0919061150e565b60405180910390f35b606061030f67b24defe9c132dce160c01b6111a7565b61032367e746a2fd98f674ca60c01b6111a7565b61033767148e2ad826c11a0360c01b6111a7565b6000805461034490611853565b80601f016020809104026020016040519081016040528092919081815260200182805461037090611853565b80156103bd5780601f10610392576101008083540402835291602001916103bd565b820191906000526020600020905b8154815290600101906020018083116103a057829003601f168201915b5050505050905090565b60006103dd67046e0af7be02011a60c01b6111a7565b6103f16788f72ed41ef68bf760c01b6111a7565b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061048667db41905202998f7b60c01b6111a7565b61049a6719b1ad5128c8e39460c01b6111a7565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104f7919061150e565b60405180910390a36105136735455a8e11f7895260c01b6111a7565b61052767a32c4ecbb2df6d3a60c01b6111a7565b6001905092915050565b600061054767946c74dd7a749dc260c01b6111a7565b61055b670164af6b6555d3a460c01b6111a7565b61056f67dc5f8d7feb2731b360c01b6111a7565b600254905090565b600061058d67111ec2f42584cc0e60c01b6111a7565b6105a16781ffda9c29477aad60c01b6111a7565b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461062d91906118b3565b9250508190555061064867670766f438b40d4d60c01b6111a7565b61065c6764fd42541586fe9560c01b6111a7565b6106678484846111aa565b61067b67c4e014685e8f20db60c01b6111a7565b61068f67bc905dcc500d404460c01b6111a7565b600190509392505050565b60006106b067cb82a58603c4be5e60c01b6111a7565b6106c46791e09e94d004c95a60c01b6111a7565b6106d867c1edd62860ecb5ea60c01b6111a7565b6012905090565b6106f367e04c575455ee64fb60c01b6111a7565b6107076794b18db8c98a926460c01b6111a7565b61071b67942be9a923a47b9860c01b6111a7565b61072f67db0cb68b5f5be10d60c01b6111a7565b61074367adaa24ae18c2852a60c01b6111a7565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ca90611933565b60405180910390fd5b6107e767be15277ebb4d1bf360c01b6111a7565b6107fb672e62f8053ab437b160c01b6111a7565b61080f6781dbcb5fc09ad81060c01b6111a7565b610823679b6827c175de243260c01b6111a7565b610837678aa175fa3e2d663a60c01b6111a7565b61084b67cab02577201ee51660c01b6111a7565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506108ac677e8ee0967eef593a60c01b6111a7565b806002600082825401925050819055506108d067940bc5f3c13d055c60c01b6111a7565b6108e467bfbf0d097455054260c01b6111a7565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610942919061150e565b60405180910390a35050565b6109626767592a335ff68fbe60c01b6111a7565b61097667ba8cd860ca197d2760c01b6111a7565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109c591906118b3565b925050819055506109e067eca5c8f9beabb7b260c01b6111a7565b6109f467dd1feda38556e3d260c01b6111a7565b80600260008282540392505081905550610a18674e7533233577b22c60c01b6111a7565b610a2c671b18afcd9bc9f31a60c01b6111a7565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a8a919061150e565b60405180910390a350565b610aa96761a90107fc2945f660c01b6111a7565b610abd6794b18db8c98a926460c01b6111a7565b610ad167942be9a923a47b9860c01b6111a7565b610ae567db0cb68b5f5be10d60c01b6111a7565b610af967adaa24ae18c2852a60c01b6111a7565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8090611933565b60405180910390fd5b610b9d67be15277ebb4d1bf360c01b6111a7565b610bb1672e62f8053ab437b160c01b6111a7565b610bc5679e1709f28ab00c7060c01b6111a7565b610bd9677483d6733f1169f060c01b6111a7565b610bed67efa65ed8504cf4c260c01b6111a7565b8060009081610bfc9190611aff565b50610c1167c373e2848a52cf2660c01b6111a7565b8160019081610c209190611aff565b505050565b6000610c3b67ce11a7e12980edf960c01b6111a7565b610c4f67576ea9861da8106a60c01b6111a7565b610c6367da9832579047aa5d60c01b6111a7565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610cc067c309663e743420fb60c01b6111a7565b610cd467ff8fde1d7e49d3d660c01b6111a7565b610ce8676333069391858fae60c01b6111a7565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060610d2667f6b4859ffeb3347c60c01b6111a7565b610d3a67faaa7d21990406de60c01b6111a7565b610d4e67c4d21aeb19e5c1d060c01b6111a7565b60018054610d5b90611853565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8790611853565b8015610dd45780601f10610da957610100808354040283529160200191610dd4565b820191906000526020600020905b815481529060010190602001808311610db757829003601f168201915b5050505050905090565b6000610df467427113825e18399160c01b6111a7565b610e086794b18db8c98a926460c01b6111a7565b610e1c67942be9a923a47b9860c01b6111a7565b610e3067db0cb68b5f5be10d60c01b6111a7565b610e4467adaa24ae18c2852a60c01b6111a7565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ed4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ecb90611933565b60405180910390fd5b610ee867be15277ebb4d1bf360c01b6111a7565b610efc672e62f8053ab437b160c01b6111a7565b610f1067adc416b2ef623d6a60c01b6111a7565b610f2467d80454b72817beaa60c01b6111a7565b610f386768129c5ddcf6b5b060c01b6111a7565b610f4c67a5360eca9c6b1b7b60c01b6111a7565b610f6067dc175a34ab54dc5760c01b6111a7565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc690611c1d565b60405180910390fd5b610fe36798aaa07bbc2849c560c01b6111a7565b610ff7673b10b0d8dd4ae69f60c01b6111a7565b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061104c67a6c409a6028e2f1d60c01b6111a7565b6110606725b7c296c8891d2760c01b6111a7565b60019050919050565b600061107f67bd1314a99ca4368b60c01b6111a7565b61109367546e6435d27255ea60c01b6111a7565b6110a767f3f7cdbd2e28993560c01b6111a7565b6110b23384846111aa565b6110c66726d8374023bd1e4d60c01b6111a7565b6110da67ef7f73baf30435f760c01b6111a7565b6001905092915050565b60006110fa6794599255748f35ae60c01b6111a7565b61110e67e8a9507b223ee5be60c01b6111a7565b611122678b9545e3cd1ecece60c01b6111a7565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b50565b6111be678a9e45efb1aacd4c60c01b6111a7565b6111d267584c829d2359ceee60c01b6111a7565b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461122191906118b3565b9250508190555061123c675af2e981e509614760c01b6111a7565b611250675991ae39fa56bd6560c01b6111a7565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506112b16796d10d31002cff7e60c01b6111a7565b6112c56760856d551bcce76060c01b6111a7565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611322919061150e565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561136957808201518184015260208101905061134e565b60008484015250505050565b6000601f19601f8301169050919050565b60006113918261132f565b61139b818561133a565b93506113ab81856020860161134b565b6113b481611375565b840191505092915050565b600060208201905081810360008301526113d98184611386565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611420826113f5565b9050919050565b61143081611415565b811461143b57600080fd5b50565b60008135905061144d81611427565b92915050565b6000819050919050565b61146681611453565b811461147157600080fd5b50565b6000813590506114838161145d565b92915050565b600080604083850312156114a05761149f6113eb565b5b60006114ae8582860161143e565b92505060206114bf85828601611474565b9150509250929050565b60008115159050919050565b6114de816114c9565b82525050565b60006020820190506114f960008301846114d5565b92915050565b61150881611453565b82525050565b600060208201905061152360008301846114ff565b92915050565b600080600060608486031215611542576115416113eb565b5b60006115508682870161143e565b93505060206115618682870161143e565b925050604061157286828701611474565b9150509250925092565b600060ff82169050919050565b6115928161157c565b82525050565b60006020820190506115ad6000830184611589565b92915050565b6000602082840312156115c9576115c86113eb565b5b60006115d784828501611474565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61162282611375565b810181811067ffffffffffffffff82111715611641576116406115ea565b5b80604052505050565b60006116546113e1565b90506116608282611619565b919050565b600067ffffffffffffffff8211156116805761167f6115ea565b5b61168982611375565b9050602081019050919050565b82818337600083830152505050565b60006116b86116b384611665565b61164a565b9050828152602081018484840111156116d4576116d36115e5565b5b6116df848285611696565b509392505050565b600082601f8301126116fc576116fb6115e0565b5b813561170c8482602086016116a5565b91505092915050565b6000806040838503121561172c5761172b6113eb565b5b600083013567ffffffffffffffff81111561174a576117496113f0565b5b611756858286016116e7565b925050602083013567ffffffffffffffff811115611777576117766113f0565b5b611783858286016116e7565b9150509250929050565b6000602082840312156117a3576117a26113eb565b5b60006117b18482850161143e565b91505092915050565b6117c381611415565b82525050565b60006020820190506117de60008301846117ba565b92915050565b600080604083850312156117fb576117fa6113eb565b5b60006118098582860161143e565b925050602061181a8582860161143e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061186b57607f821691505b60208210810361187e5761187d611824565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118be82611453565b91506118c983611453565b92508282039050818111156118e1576118e0611884565b5b92915050565b7f4f6e6c79206f776e657200000000000000000000000000000000000000000000600082015250565b600061191d600a8361133a565b9150611928826118e7565b602082019050919050565b6000602082019050818103600083015261194c81611910565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026119b57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611978565b6119bf8683611978565b95508019841693508086168417925050509392505050565b6000819050919050565b60006119fc6119f76119f284611453565b6119d7565b611453565b9050919050565b6000819050919050565b611a16836119e1565b611a2a611a2282611a03565b848454611985565b825550505050565b600090565b611a3f611a32565b611a4a818484611a0d565b505050565b5b81811015611a6e57611a63600082611a37565b600181019050611a50565b5050565b601f821115611ab357611a8481611953565b611a8d84611968565b81016020851015611a9c578190505b611ab0611aa885611968565b830182611a4f565b50505b505050565b600082821c905092915050565b6000611ad660001984600802611ab8565b1980831691505092915050565b6000611aef8383611ac5565b9150826002028217905092915050565b611b088261132f565b67ffffffffffffffff811115611b2157611b206115ea565b5b611b2b8254611853565b611b36828285611a72565b600060209050601f831160018114611b695760008415611b57578287015190505b611b618582611ae3565b865550611bc9565b601f198416611b7786611953565b60005b82811015611b9f57848901518255600182019150602085019450602081019050611b7a565b86831015611bbc5784890151611bb8601f891682611ac5565b8355505b6001600288020188555050505b505050505050565b7f4e6577206f776e6572206973207a65726f206164647265737300000000000000600082015250565b6000611c0760198361133a565b9150611c1282611bd1565b602082019050919050565b60006020820190508181036000830152611c3681611bfa565b905091905056fea264697066735822122069d8439325ca23e94369016691ce1e035c0122f9a652a2bf98ea278b0e75b98864736f6c63430008110033";

type UserTokenSafeGasConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserTokenSafeGasConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserTokenSafeGas__factory extends ContractFactory {
  constructor(...args: UserTokenSafeGasConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UserTokenSafeGas> {
    return super.deploy(overrides || {}) as Promise<UserTokenSafeGas>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UserTokenSafeGas {
    return super.attach(address) as UserTokenSafeGas;
  }
  override connect(signer: Signer): UserTokenSafeGas__factory {
    return super.connect(signer) as UserTokenSafeGas__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserTokenSafeGasInterface {
    return new utils.Interface(_abi) as UserTokenSafeGasInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UserTokenSafeGas {
    return new Contract(address, _abi, signerOrProvider) as UserTokenSafeGas;
  }
}
