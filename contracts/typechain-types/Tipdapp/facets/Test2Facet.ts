/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface Test2FacetInterface extends utils.Interface {
  functions: {
    "test2Func1()": FunctionFragment;
    "test2Func10()": FunctionFragment;
    "test2Func11()": FunctionFragment;
    "test2Func12()": FunctionFragment;
    "test2Func13()": FunctionFragment;
    "test2Func14()": FunctionFragment;
    "test2Func15()": FunctionFragment;
    "test2Func16()": FunctionFragment;
    "test2Func17()": FunctionFragment;
    "test2Func18()": FunctionFragment;
    "test2Func19()": FunctionFragment;
    "test2Func2()": FunctionFragment;
    "test2Func20()": FunctionFragment;
    "test2Func3()": FunctionFragment;
    "test2Func4()": FunctionFragment;
    "test2Func5()": FunctionFragment;
    "test2Func6()": FunctionFragment;
    "test2Func7()": FunctionFragment;
    "test2Func8()": FunctionFragment;
    "test2Func9()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "test2Func1"
      | "test2Func10"
      | "test2Func11"
      | "test2Func12"
      | "test2Func13"
      | "test2Func14"
      | "test2Func15"
      | "test2Func16"
      | "test2Func17"
      | "test2Func18"
      | "test2Func19"
      | "test2Func2"
      | "test2Func20"
      | "test2Func3"
      | "test2Func4"
      | "test2Func5"
      | "test2Func6"
      | "test2Func7"
      | "test2Func8"
      | "test2Func9"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "test2Func1",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func10",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func11",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func12",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func13",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func14",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func15",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func16",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func17",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func18",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func19",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func2",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func20",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func3",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func4",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func5",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func6",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func7",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func8",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "test2Func9",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "test2Func1", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "test2Func10",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "test2Func11",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "test2Func12",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "test2Func13",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "test2Func14",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "test2Func15",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "test2Func16",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "test2Func17",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "test2Func18",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "test2Func19",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "test2Func2", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "test2Func20",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "test2Func3", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "test2Func4", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "test2Func5", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "test2Func6", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "test2Func7", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "test2Func8", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "test2Func9", data: BytesLike): Result;

  events: {};
}

export interface Test2Facet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: Test2FacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    test2Func1(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func10(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func11(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func12(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func13(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func14(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func15(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func16(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func17(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func18(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func19(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func2(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func20(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func3(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func4(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func5(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func6(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func7(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func8(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    test2Func9(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  test2Func1(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func10(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func11(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func12(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func13(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func14(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func15(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func16(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func17(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func18(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func19(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func2(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func20(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func3(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func4(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func5(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func6(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func7(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func8(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  test2Func9(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    test2Func1(overrides?: CallOverrides): Promise<void>;

    test2Func10(overrides?: CallOverrides): Promise<void>;

    test2Func11(overrides?: CallOverrides): Promise<void>;

    test2Func12(overrides?: CallOverrides): Promise<void>;

    test2Func13(overrides?: CallOverrides): Promise<void>;

    test2Func14(overrides?: CallOverrides): Promise<void>;

    test2Func15(overrides?: CallOverrides): Promise<void>;

    test2Func16(overrides?: CallOverrides): Promise<void>;

    test2Func17(overrides?: CallOverrides): Promise<void>;

    test2Func18(overrides?: CallOverrides): Promise<void>;

    test2Func19(overrides?: CallOverrides): Promise<void>;

    test2Func2(overrides?: CallOverrides): Promise<void>;

    test2Func20(overrides?: CallOverrides): Promise<void>;

    test2Func3(overrides?: CallOverrides): Promise<void>;

    test2Func4(overrides?: CallOverrides): Promise<void>;

    test2Func5(overrides?: CallOverrides): Promise<void>;

    test2Func6(overrides?: CallOverrides): Promise<void>;

    test2Func7(overrides?: CallOverrides): Promise<void>;

    test2Func8(overrides?: CallOverrides): Promise<void>;

    test2Func9(overrides?: CallOverrides): Promise<void>;
  };

  filters: {};

  estimateGas: {
    test2Func1(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func10(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func11(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func12(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func13(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func14(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func15(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func16(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func17(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func18(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func19(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func2(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func20(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func3(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func4(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func5(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func6(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func7(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func8(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    test2Func9(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    test2Func1(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func10(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func11(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func12(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func13(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func14(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func15(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func16(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func17(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func18(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func19(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func2(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func20(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func3(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func4(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func5(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func6(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func7(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func8(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    test2Func9(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
