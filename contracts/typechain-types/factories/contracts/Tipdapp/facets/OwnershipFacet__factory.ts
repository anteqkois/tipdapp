/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  OwnershipFacet,
  OwnershipFacetInterface,
} from "../../../../contracts/Tipdapp/facets/OwnershipFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061060c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b14610059575b600080fd5b610043610075565b60405161005091906104ba565b60405180910390f35b610073600480360381019061006e9190610506565b6100ac565b005b600061008b67bb1add6271d1b97560c01b610124565b61009f67c174b803cd3a1f5960c01b610124565b6100a7610127565b905090565b6100c067136768f88f1f59f460c01b610124565b6100d467cf53cd6d981310b060c01b610124565b6100e86734549ab6b14074e660c01b610124565b6100f0610182565b6101046737f618bdfdb0884660c01b610124565b61011867a6cb5995b7f0e94060c01b610124565b61012181610281565b50565b50565b600061013d677d4baa64a50f2e6160c01b6103f8565b61015167b505f93efb2b137060c01b6103f8565b6101596103fb565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61019667c70b01c8f5a42eb060c01b6103f8565b6101aa67a8f89aa2bfafc24c60c01b6103f8565b6101be676b4f0b68756580c660c01b6103f8565b6101d267c0e3aa691c97f4b860c01b6103f8565b6101da6103fb565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461026b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610262906105b6565b60405180910390fd5b61027f67c9ca38073fbe7f8760c01b6103f8565b565b61029567f6e307ae25e8c1ad60c01b6103f8565b6102a96794851268fb3010da60c01b6103f8565b6102bd678054043697ae4c8d60c01b6103f8565b60006102c76103fb565b90506102dd6705c00ecec330d89760c01b6103f8565b6102f1673916e4e374a3849760c01b6103f8565b60008160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061032e6773d08efb6974e6a960c01b6103f8565b828260040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061038567d1910509012284bd60c01b6103f8565b61039967063bc4b65a323b9660c01b6103f8565b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b50565b6000610411674cd8ea8450283c6660c01b6103f8565b6104256741e2e691e2166cd760c01b6103f8565b610439678d4ce6a3d6f7770760c01b6103f8565b60007fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c9050610472678efb111757eeabfc60c01b6103f8565b8091505090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a482610479565b9050919050565b6104b481610499565b82525050565b60006020820190506104cf60008301846104ab565b92915050565b600080fd5b6104e381610499565b81146104ee57600080fd5b50565b600081359050610500816104da565b92915050565b60006020828403121561051c5761051b6104d5565b5b600061052a848285016104f1565b91505092915050565b600082825260208201905092915050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b60006105a0602283610533565b91506105ab82610544565b604082019050919050565b600060208201905081810360008301526105cf81610593565b905091905056fea2646970667358221220d0d72b735cf80018f9f0fc18b003bd38fac736d612cd65fcbf82c3ce7440603664736f6c63430008110033";

type OwnershipFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnershipFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnershipFacet__factory extends ContractFactory {
  constructor(...args: OwnershipFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OwnershipFacet> {
    return super.deploy(overrides || {}) as Promise<OwnershipFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OwnershipFacet {
    return super.attach(address) as OwnershipFacet;
  }
  override connect(signer: Signer): OwnershipFacet__factory {
    return super.connect(signer) as OwnershipFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnershipFacetInterface {
    return new utils.Interface(_abi) as OwnershipFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnershipFacet {
    return new Contract(address, _abi, signerOrProvider) as OwnershipFacet;
  }
}
