/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ChailinkPriceFeeds,
  ChailinkPriceFeedsInterface,
} from "../../../contracts/Tipdapp/ChailinkPriceFeeds";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressTokenFeeds",
        type: "address",
      },
    ],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101ff806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806316345f1814610030575b600080fd5b61004361003e3660046100de565b610055565b60405190815260200160405180910390f35b6000808290506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561009b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100bf919061012d565b505050915050806402540be4006100d69190610193565b949350505050565b6000602082840312156100f057600080fd5b81356001600160a01b038116811461010757600080fd5b9392505050565b805169ffffffffffffffffffff8116811461012857600080fd5b919050565b600080600080600060a0868803121561014557600080fd5b61014e8661010e565b94506020860151935060408601519250606086015191506101716080870161010e565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b80820260008212600160ff1b841416156101af576101af61017d565b81810583148215176101c3576101c361017d565b9291505056fea2646970667358221220a1688d355692a2274a8533f53775907a6ebefce113cf6eace6a97a0995d7f53e64736f6c63430008110033";

type ChailinkPriceFeedsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChailinkPriceFeedsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChailinkPriceFeeds__factory extends ContractFactory {
  constructor(...args: ChailinkPriceFeedsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChailinkPriceFeeds> {
    return super.deploy(overrides || {}) as Promise<ChailinkPriceFeeds>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ChailinkPriceFeeds {
    return super.attach(address) as ChailinkPriceFeeds;
  }
  override connect(signer: Signer): ChailinkPriceFeeds__factory {
    return super.connect(signer) as ChailinkPriceFeeds__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChailinkPriceFeedsInterface {
    return new utils.Interface(_abi) as ChailinkPriceFeedsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChailinkPriceFeeds {
    return new Contract(address, _abi, signerOrProvider) as ChailinkPriceFeeds;
  }
}
