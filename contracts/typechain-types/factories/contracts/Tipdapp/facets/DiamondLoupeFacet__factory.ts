/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DiamondLoupeFacet,
  DiamondLoupeFacetInterface,
} from "../../../../contracts/Tipdapp/facets/DiamondLoupeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "_facetFunctionSelectors",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611df1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c57806352ef6b2c1461008c5780637a0ed627146100aa578063adfca15e146100c8578063cdffacc6146100f8575b600080fd5b6100766004803603810190610071919061183c565b610128565b6040516100839190611884565b60405180910390f35b610094610202565b6040516100a1919061198f565b60405180910390f35b6100b26107b3565b6040516100bf9190611b6e565b60405180910390f35b6100e260048036038101906100dd9190611bbc565b6111d3565b6040516100ef9190611c58565b60405180910390f35b610112600480360381019061010d919061183c565b61166e565b60405161011f9190611c89565b60405180910390f35b600061013e67a3696c598d4126c660c01b61172b565b6101526775c4bafde5d122d160c01b61172b565b610165668965da0bbee97960c01b61172b565b600061016f61172e565b905061018567e6321ca03503731360c01b61172b565b6101996786be4fa0363757ce60c01b61172b565b806003016000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff16915050919050565b606061021867d267a0813d5d840a60c01b61172b565b61022c670d00b826275c899960c01b61172b565b610240675067767ea3aa5f9a60c01b61172b565b600061024a61172e565b905061026067a02aea2f8846390360c01b61172b565b8060020160009054906101000a900461ffff1661ffff1667ffffffffffffffff8111156102905761028f611ca4565b5b6040519080825280602002602001820160405280156102be5781602001602082028036833780820191505090505b5091506102d567f578cf1c1f9f3c0f60c01b61172b565b6102e96717ef54480492608e60c01b61172b565b60006102ff67e6012ffa380b5a6c60c01b61172b565b610313679532d5d55228e9f960c01b61172b565b600061032967cd460c53e8235d1060c01b61172b565b61033d6778bad1c61ff8a48c60c01b61172b565b60005b8360020160009054906101000a900461ffff1661ffff1682101561079557610372679e9a3af8107f427360c01b61172b565b61038667507940b47321b66f60c01b61172b565b60008460010160008381526020019081526020016000205490506103b4675e0d7fa60641a95c60c01b61172b565b6103c867d038cb7f46263ba960c01b61172b565b60005b6008811015610780576103e867fae8cb22995fb89d60c01b61172b565b83806103f390611d0c565b94505061040a67ef53d3377d986f1a60c01b61172b565b61041e677d9763af9662129d60c01b61172b565b8560020160009054906101000a900461ffff1661ffff1684111561046957610450673f0031512b93ef7b60c01b61172b565b61046467f88b8a32fe9d25e360c01b61172b565b610780565b61047d67e317c5fa32d904aa60c01b61172b565b61049167103bb3d3cf19fd8460c01b61172b565b6104a5674fd9bf62635520de60c01b61172b565b6000600582901b83901b90506104c5676e0700ef22108cb660c01b61172b565b6104d967fd175b022887926660c01b61172b565b6000876000016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000205460601c9050610548673a8999fb31e69e7e60c01b61172b565b61055c67e260bfeef7e2887760c01b61172b565b6000610572673d274cd3360c7c3060c01b61172b565b61058667bba327663782832960c01b61172b565b60005b88811015610672576105a5672c6dc61de36b1c5560c01b61172b565b6105b9672329aeb6e2fff8dc60c01b61172b565b8a81815181106105cc576105cb611d54565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361064b5761061a67a5b470314ff5c0fc60c01b61172b565b61062e6721fb5446c4015e3760c01b61172b565b600191506106466772c925201704686d60c01b61172b565b610672565b61065f6762fbfd648206dbe960c01b61172b565b808061066a90611d0c565b915050610589565b50610687677db0ea0a7dd8d34b60c01b61172b565b61069b6769abf1ad4f34290d60c01b61172b565b80156106d1576106b5676dcd494f6703f96960c01b61172b565b6106c96706cc64c6c0abc54060c01b61172b565b50505061076d565b6106e567e09aa9a4bf80629160c01b61172b565b6106f967d65d058fc3a312a260c01b61172b565b818a898151811061070d5761070c611d54565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061075b671bc79279ace14e1b60c01b61172b565b878061076690611d0c565b9850505050505b808061077890611d0c565b9150506103cb565b5050808061078d90611d0c565b915050610340565b506107aa67becba6f65f94737860c01b61172b565b81845250505090565b60606107c9676678c6033cce637260c01b61172b565b6107dd67778b53cbeedb1d5760c01b61172b565b6107f167ae73431a0c3c81f460c01b61172b565b60006107fb61172e565b9050610811670f7a0d374fbfabbc60c01b61172b565b8060020160009054906101000a900461ffff1661ffff1667ffffffffffffffff81111561084157610840611ca4565b5b60405190808252806020026020018201604052801561087a57816020015b6108676117af565b81526020019060019003908161085f5790505b50915061089167a5815a7ff18d2a3b60c01b61172b565b6108a56714e1a207eed21fa460c01b61172b565b60008160020160009054906101000a900461ffff1661ffff1667ffffffffffffffff8111156108d7576108d6611ca4565b5b6040519080825280602002602001820160405280156109055781602001602082028036833780820191505090505b50905061091c67310a86546791459b60c01b61172b565b61093067fe05684bad7a7f6a60c01b61172b565b600061094667f6a9697134a2159960c01b61172b565b61095a67464f97ca190dbe5e60c01b61172b565b60006109706729d8e4ba1676f39560c01b61172b565b61098467eb6239215f7635ea60c01b61172b565b60005b8460020160009054906101000a900461ffff1661ffff168210156110be576109b967a2e573cee6bdbcd360c01b61172b565b6109cd67b16bcd8e00c9b83f60c01b61172b565b60008560010160008381526020019081526020016000205490506109fb67519a59d815858c3360c01b61172b565b610a0f67caf4c60d68076bed60c01b61172b565b60005b60088110156110a957610a2f675525c14fafeb677360c01b61172b565b8380610a3a90611d0c565b945050610a516763cc84761e4607c760c01b61172b565b610a6567d8b2f19ed3f337b860c01b61172b565b8660020160009054906101000a900461ffff1661ffff16841115610ab057610a97677e27046aefb001e060c01b61172b565b610aab67aa1d0634596279c860c01b61172b565b6110a9565b610ac467bbc6fbdead9b930860c01b61172b565b610ad867290d7f724f3c4b3860c01b61172b565b610aec67246dcbfa6e036bdf60c01b61172b565b6000600582901b83901b9050610b0c676a40ef4f7cdaaaf160c01b61172b565b610b206771fd9387e04e9e7160c01b61172b565b6000886000016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000205460601c9050610b8f67eadb6990adfeac5060c01b61172b565b610ba367ceead6bceb0c782a60c01b61172b565b6000610bb96782557059c91646fb60c01b61172b565b610bcd6724e920e5250155b460c01b61172b565b60005b88811015610e3057610bec6797bd1e39a9597a7660c01b61172b565b610c006730ec883ec45e923660c01b61172b565b8273ffffffffffffffffffffffffffffffffffffffff168c8281518110610c2a57610c29611d54565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1603610e0957610c656734af40f06370664d60c01b61172b565b610c7967a2ab06b6bda1909b60c01b61172b565b838c8281518110610c8d57610c8c611d54565b5b6020026020010151602001518b8381518110610cac57610cab611d54565b5b602002602001015161ffff1681518110610cc957610cc8611d54565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050610d29676ed4cc1248fa449e60c01b61172b565b610d3d679682648101aef0bf60c01b61172b565b610d5167a9063363968ed6d560c01b61172b565b60ff8a8281518110610d6657610d65611d54565b5b602002602001015161ffff1610610d7c57600080fd5b610d90677c610e2b8abd410e60c01b61172b565b610da467206d6aeda00dea4b60c01b61172b565b898181518110610db757610db6611d54565b5b602002602001018051809190610dcc90611d91565b61ffff1661ffff1681525050610dec670f6fdaca63a42ac760c01b61172b565b60019150610e0467b2c1f71e9bfebc8e60c01b61172b565b610e30565b610e1d675466acc5efd41f8160c01b61172b565b8080610e2890611d0c565b915050610bd0565b50610e4567381cf212b6a4698d60c01b61172b565b610e596758f07eb7e71fcf7e60c01b61172b565b8015610e8f57610e736719208565e38f752a60c01b61172b565b610e8767aa217d9ae97880ac60c01b61172b565b505050611096565b610ea367ac78ad9cb174d7b660c01b61172b565b610eb7674fb4d2d86d3495bb60c01b61172b565b818b8981518110610ecb57610eca611d54565b5b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610f1d67a3be1bdc565b191160c01b61172b565b8960020160009054906101000a900461ffff1661ffff1667ffffffffffffffff811115610f4d57610f4c611ca4565b5b604051908082528060200260200182016040528015610f7b5781602001602082028036833780820191505090505b508b8981518110610f8f57610f8e611d54565b5b602002602001015160200181905250610fb267b93bb0c82515114260c01b61172b565b828b8981518110610fc657610fc5611d54565b5b602002602001015160200151600081518110610fe557610fe4611d54565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506110456790fba7b8b35e0fa960c01b61172b565b600189898151811061105a57611059611d54565b5b602002602001019061ffff16908161ffff168152505061108467684eaded1ede983d60c01b61172b565b878061108f90611d0c565b9850505050505b80806110a190611d0c565b915050610a12565b505080806110b690611d0c565b915050610987565b506110d367f3da3e1a641727eb60c01b61172b565b6110e767ca63398cf177521660c01b61172b565b60005b828110156111b45761110667874c2365081df16960c01b61172b565b61111a6759ebf3e4a2b548ed60c01b61172b565b600084828151811061112f5761112e611d54565b5b602002602001015161ffff169050611151673ecce1ee64c88cea60c01b61172b565b61116567108b8ba3466edb1860c01b61172b565b600087838151811061117a57611179611d54565b5b602002602001015160200151905061119c67a1c1fcedd1e8bec260c01b61172b565b818152505080806111ac90611d0c565b9150506110ea565b506111c9675c22d381bd86b9e560c01b61172b565b8185525050505090565b60606111e9674d57565f5ba5d3fa60c01b61172b565b6111fd6723c17dfed40e6a2860c01b61172b565b6112116737c0620435412a8460c01b61172b565b600061121b61172e565b9050611231677735b8bbf1d0a91860c01b61172b565b6112456712d9db69775e7b1460c01b61172b565b600061125b6724e83dea68c74bce60c01b61172b565b8160020160009054906101000a900461ffff1661ffff1667ffffffffffffffff81111561128b5761128a611ca4565b5b6040519080825280602002602001820160405280156112b95781602001602082028036833780820191505090505b5092506112d067c08b6b453f99408260c01b61172b565b6112e46725246d24591028e460c01b61172b565b60006112fa67fa11d5904a8f8af660c01b61172b565b61130e67d87e1c6d2bfedaac60c01b61172b565b60005b8360020160009054906101000a900461ffff1661ffff1682101561164e57611343674ed0f5ebe56388b460c01b61172b565b611357678524f309ac2e1b4360c01b61172b565b600084600101600083815260200190815260200160002054905061138567af1d0de5bef3887e60c01b61172b565b61139967d026ac82ad91ce0a60c01b61172b565b60005b6008811015611639576113b96776a76bccb4e335a360c01b61172b565b83806113c490611d0c565b9450506113db67e5081d152e2b09b660c01b61172b565b6113ef67ac070946de715ba960c01b61172b565b8560020160009054906101000a900461ffff1661ffff1684111561143a5761142167fbf7317588cc2f4960c01b61172b565b61143567b0bf2fc0de88b3ce60c01b61172b565b611639565b61144e67161d3d7686b9962160c01b61172b565b61146267f1da76e9a180652560c01b61172b565b61147667d0b9ac9669e584ff60c01b61172b565b6000600582901b83901b905061149667973c9cea9369ea7060c01b61172b565b6114aa67973256a1c517e8d560c01b61172b565b6000876000016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000205460601c905061151967d417a8f78f8d113c60c01b61172b565b61152d671bf5259f43955b7460c01b61172b565b8073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff160361160f5761157467d729504c3937cd2e60c01b61172b565b61158867e521cdd69e19474760c01b61172b565b8189888151811061159c5761159b611d54565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506115fc67a1d080d9b8904d2660c01b61172b565b868061160790611d0c565b975050611624565b61162367133e6ad7d040f53e60c01b61172b565b5b5050808061163190611d0c565b91505061139c565b5050808061164690611d0c565b915050611311565b5061166367b8f944e8635a6a5d60c01b61172b565b818452505050919050565b600061168467ee08ae53da5b93e160c01b61172b565b611698676534ce3ab83bd4fb60c01b61172b565b6116ac67b02e177425df3cd860c01b61172b565b60006116b661172e565b90506116cc677fed79d85fde13c060c01b61172b565b806000016000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000205460601c915050919050565b50565b6000611744675af8ebdb599086bc60c01b6117ac565b6117586796706581f29c3cd660c01b6117ac565b61176c676370795a1b2602b560c01b6117ac565b60007fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90506117a56713dbeff0dfe7e6ca60c01b6117ac565b8091505090565b50565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611819816117e4565b811461182457600080fd5b50565b60008135905061183681611810565b92915050565b600060208284031215611852576118516117df565b5b600061186084828501611827565b91505092915050565b60008115159050919050565b61187e81611869565b82525050565b60006020820190506118996000830184611875565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118f6826118cb565b9050919050565b611906816118eb565b82525050565b600061191883836118fd565b60208301905092915050565b6000602082019050919050565b600061193c8261189f565b61194681856118aa565b9350611951836118bb565b8060005b83811015611982578151611969888261190c565b975061197483611924565b925050600181019050611955565b5085935050505092915050565b600060208201905081810360008301526119a98184611931565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a12816117e4565b82525050565b6000611a248383611a09565b60208301905092915050565b6000602082019050919050565b6000611a48826119dd565b611a5281856119e8565b9350611a5d836119f9565b8060005b83811015611a8e578151611a758882611a18565b9750611a8083611a30565b925050600181019050611a61565b5085935050505092915050565b6000604083016000830151611ab360008601826118fd565b5060208301518482036020860152611acb8282611a3d565b9150508091505092915050565b6000611ae48383611a9b565b905092915050565b6000602082019050919050565b6000611b04826119b1565b611b0e81856119bc565b935083602082028501611b20856119cd565b8060005b85811015611b5c5784840389528151611b3d8582611ad8565b9450611b4883611aec565b925060208a01995050600181019050611b24565b50829750879550505050505092915050565b60006020820190508181036000830152611b888184611af9565b905092915050565b611b99816118eb565b8114611ba457600080fd5b50565b600081359050611bb681611b90565b92915050565b600060208284031215611bd257611bd16117df565b5b6000611be084828501611ba7565b91505092915050565b600082825260208201905092915050565b6000611c05826119dd565b611c0f8185611be9565b9350611c1a836119f9565b8060005b83811015611c4b578151611c328882611a18565b9750611c3d83611a30565b925050600181019050611c1e565b5085935050505092915050565b60006020820190508181036000830152611c728184611bfa565b905092915050565b611c83816118eb565b82525050565b6000602082019050611c9e6000830184611c7a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b6000611d1782611d02565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d4957611d48611cd3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061ffff82169050919050565b6000611d9c82611d83565b915061ffff8203611db057611daf611cd3565b5b60018201905091905056fea2646970667358221220966ad6525f3cb7b91bddf8a11579f6eed1b3e08731ba6a17f084f45bff4be89764736f6c63430008110033";

type DiamondLoupeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondLoupeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondLoupeFacet__factory extends ContractFactory {
  constructor(...args: DiamondLoupeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondLoupeFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondLoupeFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondLoupeFacet {
    return super.attach(address) as DiamondLoupeFacet;
  }
  override connect(signer: Signer): DiamondLoupeFacet__factory {
    return super.connect(signer) as DiamondLoupeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondLoupeFacetInterface {
    return new utils.Interface(_abi) as DiamondLoupeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondLoupeFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondLoupeFacet;
  }
}
