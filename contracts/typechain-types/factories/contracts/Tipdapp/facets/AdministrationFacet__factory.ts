/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AdministrationFacet,
  AdministrationFacetInterface,
} from "../../../../contracts/Tipdapp/facets/AdministrationFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_newSignerAdmin",
        type: "address",
      },
    ],
    name: "changeSignerAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "setUserTokenImplmentation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signerAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tipFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "userTokenImplmentation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "withdrawERC20Admin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawETHAdmin",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokenAddress",
        type: "address[]",
      },
    ],
    name: "withdrawManyERC20Admin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610693806100206000396000f3fe6080604052600436106100a75760003560e01c8063a1244ca111610064578063a1244ca114610165578063d63fc60a14610185578063d8a3740e146101a5578063e98827b6146101c3578063f7b188a5146101e3578063fab6a803146101f857600080fd5b806335759788146100ac5780635c975abb146100b657806369fe0e2d146100de57806379cc3f1c146100fe5780638456cb591461011e5780638b08da6d14610133575b600080fd5b6100b461021b565b005b3480156100c257600080fd5b5060015460ff1660405190151581526020015b60405180910390f35b3480156100ea57600080fd5b506100b46100f9366004610567565b6102e4565b34801561010a57600080fd5b506100b4610119366004610580565b6102ff565b34801561012a57600080fd5b506100b461034a565b34801561013f57600080fd5b506005546001600160a01b03165b6040516001600160a01b0390911681526020016100d5565b34801561017157600080fd5b506100b46101803660046105f5565b610360565b34801561019157600080fd5b506100b46101a03660046105f5565b61038a565b3480156101b157600080fd5b506000546040519081526020016100d5565b3480156101cf57600080fd5b506100b46101de3660046105f5565b6103ba565b3480156101ef57600080fd5b506100b46104ca565b34801561020457600080fd5b5060015461010090046001600160a01b031661014d565b6102236104de565b30600090815260026020526040808220549051909190339083908381818185875af1925050503d8060008114610275576040519150601f19603f3d011682016040523d82523d6000602084013e61027a565b606091505b50509050806102d05760405162461bcd60e51b815260206004820152601860248201527f4661696c656420746f207769746864726177204574686572000000000000000060448201526064015b60405180910390fd5b505030600090815260026020526040812055565b6102ec6104de565b6105dc81106102fa57600080fd5b600055565b6103076104de565b8060005b8181146103445761033c84848381811061032757610327610625565b90506020020160208101906101de91906105f5565b60010161030b565b50505050565b6103526104de565b6001805460ff191681179055565b6103686104de565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6103926104de565b600180546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6103c26104de565b3060009081526003602090815260408083206001600160a01b038516808552925280832054905163a9059cbb60e01b8152336004820152602481018290529092919063a9059cbb906044016020604051808303816000875af115801561042c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610450919061063b565b90508061049f5760405162461bcd60e51b815260206004820152601a60248201527f5769746864726177204552433230206e6f74207375636365737300000000000060448201526064016102c7565b50503060009081526003602090815260408083206001600160a01b0394909416835292905290812055565b6104d26104de565b6001805460ff19169055565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146105655760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b60648201526084016102c7565b565b60006020828403121561057957600080fd5b5035919050565b6000806020838503121561059357600080fd5b823567ffffffffffffffff808211156105ab57600080fd5b818501915085601f8301126105bf57600080fd5b8135818111156105ce57600080fd5b8660208260051b85010111156105e357600080fd5b60209290920196919550909350505050565b60006020828403121561060757600080fd5b81356001600160a01b038116811461061e57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561064d57600080fd5b8151801515811461061e57600080fdfea26469706673582212205209a95869da69b95ccbd41656374664465dbd304efdecd1ecd621b7a75bead164736f6c63430008110033";

type AdministrationFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdministrationFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AdministrationFacet__factory extends ContractFactory {
  constructor(...args: AdministrationFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AdministrationFacet> {
    return super.deploy(overrides || {}) as Promise<AdministrationFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AdministrationFacet {
    return super.attach(address) as AdministrationFacet;
  }
  override connect(signer: Signer): AdministrationFacet__factory {
    return super.connect(signer) as AdministrationFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdministrationFacetInterface {
    return new utils.Interface(_abi) as AdministrationFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AdministrationFacet {
    return new Contract(address, _abi, signerOrProvider) as AdministrationFacet;
  }
}
